{"version":3,"sources":["components/Auth/AuthForm.module.css","components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","timeout","retrieveStoredToken","storedToken","localStorage","getItem","remainingTime","expirationTime","currentTime","Date","getTime","calculateRrmainingTime","removeItem","duration","AuthContextProvider","props","initialToken","tokenData","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","history","useHistory","authCtx","useContext","className","classes","header","to","logo","onClick","replace","Layout","ProfileForm","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","emailInputRef","passwordInputRef","auth","url","enteredEmail","eneteredPassword","email","ok","json","focus","data","errorMessage","error","message","Error","toISOString","catch","err","alert","required","actions","style","color","toggle","prevState","AuthPage","StartingPageContent","time","timer","setTimer","Math","floor","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ddd36a29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1NS4S\",\"control\":\"AuthForm_control__39Bm2\",\"actions\":\"AuthForm_actions__3cjU7\",\"toggle\":\"AuthForm_toggle__K3Lux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__35yvD\",\"control\":\"ProfileForm_control__N7-2E\",\"action\":\"ProfileForm_action__26IYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2k7Jk\",\"logo\":\"MainNavigation_logo__3ZXFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3ugRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__3aeHz\"};","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n\ttoken: \"\",\r\n\tisLoggedIn: false,\r\n\tlogin: (token) => {},\r\n\tlogout: () => {},\r\n\ttimeout: null,\r\n});\r\n\r\nconst calculateRrmainingTime = (expirationTime) => {\r\n\tconst currentTime = new Date().getTime();\r\n\tconst adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n\tconst remainingDuration = adjExpirationTime - currentTime;\r\n\r\n\treturn remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n\tconst storedToken = localStorage.getItem(\"token\");\r\n\tconst storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n\r\n\tconst remainingTime = calculateRrmainingTime(storedExpirationDate);\r\n\r\n\tif (remainingTime <= 3000) {\r\n\t\tlocalStorage.removeItem(\"token\");\r\n\t\tlocalStorage.removeItem(\"expirationTime\");\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn {\r\n\t\ttoken: storedToken,\r\n\t\tduration: remainingTime,\r\n\t};\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\tconst tokenData = retrieveStoredToken();\r\n\tlet initialToken;\r\n\r\n\tif (tokenData) {\r\n\t\tinitialToken = tokenData.token;\r\n\t}\r\n\r\n\tconst [token, setToken] = useState(initialToken);\r\n\r\n\tconst userIsLoggedIn = !!token;\r\n\r\n\tconst logoutHandler = useCallback(() => {\r\n\t\tsetToken(null);\r\n\t\tlocalStorage.removeItem(\"token\");\r\n\t\tlocalStorage.removeItem(\"expirationTime\");\r\n\r\n\t\tif (logoutTimer) {\r\n\t\t\tclearTimeout(logoutTimer);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst loginHandler = (token, expirationTime) => {\r\n\t\tsetToken(token);\r\n\t\tlocalStorage.setItem(\"token\", token);\r\n\t\tlocalStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n\t\t// Used to set the timeout correlated with Firebase (1h by default)\r\n\t\t// const remainingTime = calculateRrmainingTime(expirationTime);\r\n\r\n\t\tlogoutTimer = setTimeout(logoutHandler, 3 * 60 * 1000);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tokenData) {\r\n\t\t\tlogoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n\t\t}\r\n\t}, [tokenData, logoutHandler]);\r\n\r\n\tconst contextValue = {\r\n\t\ttoken: token,\r\n\t\tisLoggedIn: userIsLoggedIn,\r\n\t\tlogin: loginHandler,\r\n\t\tlogout: logoutHandler,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider value={contextValue}>\r\n\t\t\t{props.children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default AuthContext;\r\n","import { Link, useHistory } from \"react-router-dom\";\n\nimport { useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n\tconst history = useHistory();\n\tconst authCtx = useContext(AuthContext);\n\n\tconst isLoggedIn = authCtx.isLoggedIn;\n\n\tconst logoutHandler = () => {\n\t\tauthCtx.logout();\n\t\thistory.replace(\"/auth\");\n\t};\n\n\treturn (\n\t\t<header className={classes.header}>\n\t\t\t<Link to=\"/\">\n\t\t\t\t<div className={classes.logo}>React Auth</div>\n\t\t\t</Link>\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t{!isLoggedIn && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/auth\">Login</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{isLoggedIn && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/profile\">Profile</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{isLoggedIn && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<button onClick={logoutHandler}>Logout</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</header>\n\t);\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useHistory } from \"react-router-dom\";\n\nimport classes from \"./ProfileForm.module.css\";\n\nconst ProfileForm = () => {\n\tconst history = useHistory();\n\tconst newPasswordInputRef = useRef();\n\tconst authCtx = useContext(AuthContext);\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredNewPassword = newPasswordInputRef.current.value;\n\n\t\t// add validation (optional)\n\n\t\tfetch(\n\t\t\t\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDOFmuibYVitUo0fyzOm24I32SlqUm7NOc\",\n\t\t\t{\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tidToken: authCtx.token,\n\t\t\t\t\tpassword: authCtx.password,\n\t\t\t\t\treturnSecureToken: false,\n\t\t\t\t}),\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application-json\",\n\t\t\t\t},\n\t\t\t}\n\t\t).then((res) => {\n\t\t\t// assumption: Always succeeds!\n\n\t\t\thistory.replace(\"/\");\n\t\t});\n\t};\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={submitHandler}>\n\t\t\t<div className={classes.control}>\n\t\t\t\t<label htmlFor=\"new-password\">New Password</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"new-password\"\n\t\t\t\t\tminLength=\"6\"\n\t\t\t\t\tref={newPasswordInputRef}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={classes.action}>\n\t\t\t\t<button>Change Password</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default ProfileForm;\n","import ProfileForm from \"./ProfileForm\";\nimport classes from \"./UserProfile.module.css\";\n\nconst UserProfile = () => {\n\treturn (\n\t\t<section className={classes.profile}>\n\t\t\t<h1>Your User Profile</h1>\n\t\t\t<ProfileForm />\n\t\t</section>\n\t);\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useHistory } from \"react-router-dom\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n\tconst history = useHistory();\n\tconst [isLogin, setIsLogin] = useState(true);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst authCtx = useContext(AuthContext);\n\n\tconst emailInputRef = useRef();\n\tconst passwordInputRef = useRef();\n\n\tconst switchAuthModeHandler = () => {\n\t\tsetIsLogin((prevState) => !prevState);\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tlet enteredEmail = emailInputRef.current.value;\n\t\tlet eneteredPassword = passwordInputRef.current.value;\n\n\t\t// optional: Add validation\n\n\t\tsetIsLoading(true);\n\t\tlet url;\n\n\t\tif (isLogin) {\n\t\t\turl =\n\t\t\t\t\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDOFmuibYVitUo0fyzOm24I32SlqUm7NOc\";\n\t\t} else {\n\t\t\turl =\n\t\t\t\t\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDOFmuibYVitUo0fyzOm24I32SlqUm7NOc\";\n\t\t}\n\n\t\tfetch(url, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: enteredEmail,\n\t\t\t\tpassword: eneteredPassword,\n\t\t\t\treturnSecureToken: true,\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tif (res.ok) {\n\t\t\t\t\temailInputRef.current.value = \"\";\n\t\t\t\t\tpasswordInputRef.current.value = \"\";\n\n\t\t\t\t\treturn res.json();\n\t\t\t\t} else {\n\t\t\t\t\tpasswordInputRef.current.value = \"\";\n\t\t\t\t\tpasswordInputRef.current.focus();\n\n\t\t\t\t\treturn res.json().then((data) => {\n\t\t\t\t\t\t// show an error modal\n\t\t\t\t\t\t// console.log(data.error.message);\n\t\t\t\t\t\tlet errorMessage = \"Authentication failed!\";\n\t\t\t\t\t\tif (data && data.error && data.error.message) {\n\t\t\t\t\t\t\terrorMessage = data.error.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(errorMessage);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tconst expirationTime = new Date(new Date().getTime() + 3 * 60 * 1000);\n\n\t\t\t\tauthCtx.login(data.idToken, expirationTime.toISOString());\n\t\t\t\thistory.replace(\"/\");\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\talert(err.message);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<section className={classes.auth}>\n\t\t\t<h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"email\">Your Email</label>\n\t\t\t\t\t<input type=\"email\" id=\"email\" required ref={emailInputRef} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"password\">Your Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tref={passwordInputRef}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t{!isLoading && (\n\t\t\t\t\t\t<button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n\t\t\t\t\t)}\n\t\t\t\t\t{isLoading && <p style={{ color: \"white\" }}>Sending request...</p>}\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName={classes.toggle}\n\t\t\t\t\t\tonClick={switchAuthModeHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isLogin ? \"Create new account\" : \"Login with existing account\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</section>\n\t);\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from \"./StartingPageContent.module.css\";\nimport { useContext, useState, useEffect } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\n\nconst StartingPageContent = () => {\n\tconst authCtx = useContext(AuthContext);\n\n\t// Takes the declared time in AuthForm (3 minutes) in miliseconds\n\tconst time =\n\t\tnew Date(localStorage.getItem(\"expirationTime\")).getTime() -\n\t\tnew Date(new Date().getTime());\n\n\tconst [timer, setTimer] = useState(time);\n\n\t// Formates to minutes and seconds\n\tconst timeout = `${Math.floor(time / 1000 / 60)} minute(s) and ${Math.floor(\n\t\t(time / 1000) % 60\n\t)} second(s) left`;\n\n\tuseEffect(() => {\n\t\tconst updateTimer = () => {\n\t\t\tsetTimer(timer - 1000);\n\t\t};\n\t\tconst timeout = setTimeout(updateTimer, 1000);\n\n\t\treturn () => {\n\t\t\tclearTimeout(timeout);\n\t\t};\n\t}, [timer]);\n\n\treturn (\n\t\t<section className={classes.starting}>\n\t\t\t{!authCtx.isLoggedIn ? (\n\t\t\t\t<h2>You're not logged in!</h2>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<h1>You're logged in!</h1>\n\t\t\t\t\t<p>You will be logged out automatically after 3 minutes.</p>\n\t\t\t\t\t<p>{timeout}</p>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</section>\n\t);\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { useContext } from \"react\";\nimport AuthContext from \"./store/auth-context\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\n\nfunction App() {\n\tconst authCtx = useContext(AuthContext);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<HomePage />\n\t\t\t\t</Route>\n\t\t\t\t{!authCtx.isLoggedIn && (\n\t\t\t\t\t<Route path=\"/auth\">\n\t\t\t\t\t\t<AuthPage />\n\t\t\t\t\t</Route>\n\t\t\t\t)}\n\t\t\t\t<Route path=\"/profile\">\n\t\t\t\t\t{authCtx.isLoggedIn && <UserProfile />}\n\t\t\t\t\t{!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n\t<AuthContextProvider>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</AuthContextProvider>\n);\n"],"sourceRoot":""}